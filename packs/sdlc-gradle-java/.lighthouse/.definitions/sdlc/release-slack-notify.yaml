apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: slack-notify
  annotations:
    tekton.dev/pipelines.minVersion: "0.20.0"
spec:
  description: Notify team about release
  workspaces:
    - name: source
      description: sources dir
  params:
    - name: SLACK_CHANNEL
      description: slack chanel to notify about release
    - name: SLACK_SECRET
      default: "slack"
      description: slack token
  steps:
    - name: slack-notify
      image: ghcr.io/jenkins-x/jx-cli:3.1.353
      workingDir: $(workspaces.source.path)
      script: |
        #!/usr/bin/env bash
        source .jx/variables.sh

        if [[ -n "$SLACK_TOKEN" ]]; then
        export ENVS_STR=$(cat promote.log | grep "Promoting app" | grep -Eo '(jx-).+')
        export PR_URLS_STR=$(cat promote.log | grep "Created Pull Request" | grep -Eo '(http|https).+')
        export REPO_TAG_URL="https://github.com/$(params.REPO_OWNER)/$(params.REPO_NAME)/tree/v${VERSION}"
        export DOCKER_IMAGE_URL="https://$DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME:$VERSION"
        export CHANGE_LOG_URL="https://github.com/$(params.REPO_OWNER)/$(params.REPO_NAME)/releases/tag/v${VERSION}"

        ENVS=()
        while read line; do
        echo "$line"
        ENVS+=("$line")
        done <<< "$ENVS_STR"

        PR_URLS=()
        while read line; do
        echo "$line"
        PR_URLS+=("$line")
        done <<< "$PR_URLS_STR"

        echo "${ENVS[*]} : ${PR_URLS[*]}"

        if [ "$(params.SLACK_CHANNEL)" != "" ]; then
          export SLACK_CHANNEL="$(params.SLACK_CHANNEL)"
        fi

        i=0
        for ENV in ${ENVS[*]}; do
          export PR_URL="${PR_URLS[i]}"
          i=$((i+1))
          echo "Sending to $ENV and URL: $PR_URL"

        eval "cat <<EOF
        $SLACK_MESSAGE_TMPL
        EOF
        " >rpl.json

          curl -X POST -H 'Content-type: application/json' -H "Authorization: Bearer $SLACK_TOKEN" --data "$(cat rpl.json)" https://slack.com/api/chat.postMessage
        done
        else
          echo "slack token is not set"
        fi
      env:
        - name: SLACK_TOKEN
          valueFrom:
            secretKeyRef:
              optional: true
              name: $(params.SLACK_SECRET)
              key: token
        - name: SLACK_CHANNEL
          valueFrom:
            secretKeyRef:
              optional: true
              name: $(params.SLACK_SECRET)
              key: defaultRecipient
        - name: SLACK_MESSAGE_TMPL
          valueFrom:
            configMapKeyRef:
              name: slack-messages
              key: RELEASE_TMPL_MSG
