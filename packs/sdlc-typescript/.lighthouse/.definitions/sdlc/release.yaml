apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: release
  annotations:
    tekton.dev/pipelines.minVersion: "0.20.0"
spec:
  description: release
  workspaces:
    - name: source
      description: sources dir
  params:
    - name: JX_BOOT
    - name: JX_CHANGELOG
    - name: JX_RELEASE
    - name: JX_REGISTRY
    - name: JX_PROMOTE
  stepTemplate:
    env:
      - name: HOME
        value: /tekton/home
    envFrom:
      - secretRef:
          name: jx-boot-job-env-vars
          optional: true
    name: ""
    workingDir: $(workspaces.source.path)
  steps:
    - env:
        - name: GIT_TOKEN
          valueFrom:
            secretKeyRef:
              key: password
              name: tekton-git
        - name: GIT_USER
          valueFrom:
            secretKeyRef:
              key: username
              name: tekton-git
      image: $(params.JX_RELEASE)
      name: next-version
      resources: { }
      script: |
        #!/usr/bin/env sh
        jx-release-version --tag > VERSION
    - image: $(params.JX_BOOT)
      name: jx-variables
      resources: { }
      script: |
        #!/usr/bin/env sh
        jx gitops variables
    - image: $(params.JX_REGISTRY)
      name: check-registry
      resources: { }
    - image: $(params.JX_CHANGELOG)
      name: promote-changelog
      resources: { }
      script: |
        #!/usr/bin/env sh
        source .jx/variables.sh

        if [ -d "charts/$REPO_NAME" ]; then
        jx gitops yset -p version -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
        jx gitops yset -p appVersion -v "$VERSION" -f ./charts/$REPO_NAME/Chart.yaml
        jx gitops yset -p 'image.repository' -v $DOCKER_REGISTRY/$DOCKER_REGISTRY_ORG/$APP_NAME -f ./charts/$REPO_NAME/values.yaml
        jx gitops yset -p 'image.tag' -v "$VERSION" -f ./charts/$REPO_NAME/values.yaml;
        else echo no charts; fi

        git add * || true
        git commit -a -m "chore: release $VERSION" --allow-empty
        git tag -fa v$VERSION -m "Release version $VERSION"
        git push --force origin v$VERSION

        jx changelog create --version v${VERSION} -y
    - image: $(params.JX_BOOT)
      name: promote-helm-release
      resources: { }
      script: |
        #!/usr/bin/env sh
        source .jx/variables.sh
        jx gitops helm release
    - image: $(params.JX_PROMOTE)
      name: promote-jx-promote
      resources: { }
      script: |
        #!/usr/bin/env sh
        source .jx/variables.sh
        jx promote -b --all --timeout 1h --no-poll > promote.log 2>&1
        cat promote.log
