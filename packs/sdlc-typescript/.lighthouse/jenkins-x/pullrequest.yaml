apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  creationTimestamp: null
  name: pullrequest
spec:
  params:
    - name: JX_BOOT
      value: "ghcr.io/jenkins-x/jx-boot:3.2.211"
    - name: JX_PREVIEW
      value: "ghcr.io/jenkins-x-plugins/jx-preview:0.0.192"
    - name: ODC_CVSS
      value: "9"
    - name: TRIVY_SEVERITY
      value: "CRITICAL"
    - name: DOCKLE_EXIT_LEVEL
      value: "fatal"
    - name: PREVIEW_ENABLED
      value: "false"
    - name: BP_BUILDER_IMAGE
      value: "paketobuildpacks/builder:base"
  pipelineSpec:
    workspaces:
      - name: source
        description: This workspace will receive the cloned git repo and be passed to the next Task.
        optional: false
    tasks:
      - name: from-build-pack
        params:
          - name: JX_BOOT
            value: "$(params.JX_BOOT)"
          - name: JX_PREVIEW
            value: "$(params.JX_PREVIEW)"
          - name: ODC_CVSS
            value: "$(params.ODC_CVSS)"
          - name: TRIVY_SEVERITY
            value: "$(params.TRIVY_SEVERITY)"
          - name: DOCKLE_EXIT_LEVEL
            value: "$(params.DOCKLE_EXIT_LEVEL)"
          - name: PREVIEW_ENABLED
            value: "$(params.PREVIEW_ENABLED)"
          - name: PROJECT_NAME
            value: "$(params.REPO_NAME)"
          - name: SONAR_PROJECT_NAME
            value: "$(params.REPO_NAME)"
          - name: BP_BUILDER_IMAGE
            value: "$(params.BP_BUILDER_IMAGE)"
          - name: SONAR_PROJECT_KEY
            value: "$(params.REPO_OWNER):$(params.REPO_NAME)"
          - name: SONAR_PR_KEY
            value: "$(params.PULL_NUMBER)"
          - name: SONAR_PR_BASE
            value: "$(params.PULL_BASE_REF)"
        workspaces:
          - name: source
            workspace: source
        taskSpec:
          metadata: { }
          stepTemplate:
            image: uses:jenkins-x/jx3-pipeline-catalog/tasks/typescript/pullrequest.yaml@versionStream
            name: ""
            resources:
              requests:
                cpu: 400m
                memory: 512Mi
          steps:
            - image: uses:.lighthouse/.definitions/sdlc/git-clone-pr.yaml
              name: ""
              resources: { }
            - name: jx-variables
              resources: { }
            - name: check-registry
              resources: { }
            - image: uses:.lighthouse/.definitions/sdlc/pr-info.yaml
              name: ""
            - image: uses:.lighthouse/.definitions/sdlc/conventional-commits.yaml
              name: ""
            - image: uses:.lighthouse/.definitions/sdlc/secrets-scanner.yaml
              name: ""
            - image: uses:.lighthouse/.definitions/sdlc/node.yaml
              name: ""
            - image: uses:.lighthouse/.definitions/sdlc/sonarqube-scanner.yaml
              name: ""
            - image: uses:.lighthouse/.definitions/sdlc/buildpacks.yaml
              name: ""
            - image: uses:.lighthouse/.definitions/sdlc/container-scan.yaml
              name: ""
            - image: uses:.lighthouse/.definitions/sdlc/owasp-dependencies-check.yaml
              name: ""
            - image: uses:.lighthouse/.definitions/sdlc/preview.yaml
              name: ""
  serviceAccountName: tekton-bot
  workspaces:
    - name: source
      emptyDir: { }
  timeout: 20m
  podTemplate:
    nodeSelector:
      pipelines: "true"
    tolerations:
      - key: "pipelines"
        operator: "Equal"
        value: "true"
        effect: "PreferNoSchedule"

