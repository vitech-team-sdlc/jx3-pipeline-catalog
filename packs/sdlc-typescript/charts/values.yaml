# Default values for example.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# enable this flag to use knative serve to deploy the app
knativeDeploy: false

replicaCount: 1

image:
  repository: draft
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "dev"


# define environment variables here as a map of key: value
env: [ ]
envFrom: [ ]

imagePullSecrets: [ ]
nameOverride: ""
fullnameOverride: ""

probePath: /
internalPort: 8080
livenessProbe:
  initialDelaySeconds: 60
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
  # Optional distinct liveness probe path, if empty the probePath is used
  probePath: ""
readinessProbe:
  failureThreshold: 1
  periodSeconds: 10
  successThreshold: 1
  timeoutSeconds: 1
  # Optional distinct readiness probe path, if empty the probePath is used
  probePath: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: { }
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: { }

podSecurityContext: { }
# fsGroup: 2000

securityContext: { }
  # capabilities:
  #   drop:
#   - ALL
# readOnlyRootFilesystem: true
# runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 80

# custom ingress annotations on this service
ingress:
  annotations: { }
  classAnnotation: { }
  labels: { }
  pathType: ImplementationSpecific

# We usually recommend not to specify default resources and to leave this as a conscious
# choice for the user. This also increases chances charts run on environments with little
# resources, such as Minikube. If you do want to specify resources, uncomment the following
# lines, adjust them as necessary, and remove the curly braces after 'resources:'.
resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi



autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: { }

tolerations: [ ]

affinity: { }

# values we use from the `jx-requirements.yml` file if we are using helmfile and helm 3
jxRequirements:
  ingress:
    # shared ingress annotations on all services
    annotations: { }
    #  kubernetes.io/ingress.class: nginx

    apiVersion: "networking.k8s.io/v1"

    # the domain for hosts
    domain: ""
    externalDNS: false
    namespaceSubDomain: -jx.
    serviceType: ""
    tls:
      email: ""
      enabled: false
      production: false
      secretName: ""

# optional list of image pull secrets to use to pull images
jx:
  # optional image pull secrets
  imagePullSecrets: [ ]

  # whether to create a Release CRD when installing charts with Release CRDs included
  releaseCRD: true

# Canary deployments
# If enabled, Istio and Flagger need to be installed in the cluster
canary:
  enabled: false
  progressDeadlineSeconds: 60
  analysis:
    interval: "1m"
    threshold: 5
    maxWeight: 60
    stepWeight: 20
    # WARNING: Canary deployments will fail and rollback if there is no traffic that will generate the below specified metrics.
    metrics:
      latency:
        threshold: 500
        interval: "1m"
  # The host is using Istio Gateway or the underlying ingress mechanism
  # This value is defaulted from the environments jx-requirements.yml ingress configuration
  host: ""
  # Add labels to the canary
  labels: {}
  # Add labels to the canary gateway
  gatewayLabels: {}