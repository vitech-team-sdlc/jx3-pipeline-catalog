apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: e2e-build
spec:
  params:
    - name: KANIKO_IMAGE
      default: "gcr.io/kaniko-project/executor:v1.7.0-debug"
  workspaces:
    - name: source
      description: sources dir
  stepTemplate:
    name: ""
    env:
      - name: HOME
        value: /tekton/home
  steps:
    - name: e2e-registry-create
      image: docker.io/amazon/aws-cli:2.0.52@sha256:1506cec98a7101c935176d440a14302ea528b8f92fcaf4a6f1ea2d7ecef7edc4
      workingDir: $(workspaces.source.path)
      script: |
        source $(workspaces.source.path)/.jx/variables.sh
        if [ -n "AWS_ROLE_ARN" ]; then
          aws ecr describe-repositories --repository-names ${E2E_REPO_NAME} || aws ecr create-repository --repository-name ${E2E_REPO_NAME}
        fi
    - name: e2e-container-build
      image: $(params.KANIKO_IMAGE)
      workingDir: "$(workspaces.source.path)/e2e"
      script: |
        #!/busybox/sh
        source $(workspaces.source.path)/.jx/variables.sh
        DOCKER_CUSTOM_CONF="$(workspaces.source.path)/.docker-config.json"
        if [ -f "$DOCKER_CUSTOM_CONF" ]; then
          mkdir -p /tekton/home/.docker/
          cp $(workspaces.source.path)/.docker-config.json /tekton/home/.docker/config.json
        fi
        
        /kaniko/executor $KANIKO_FLAGS --context=/workspace/source/e2e --dockerfile=${DOCKERFILE_PATH:-Dockerfile} --destination=$E2E_IMAGE:$VERSION
