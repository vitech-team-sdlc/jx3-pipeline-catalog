# Source: tektonpipelines/templates/tasks/secrets-scan.yaml
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: secrets-scanner
  annotations:
    tekton.dev/pipelines.minVersion: "0.20.0"
    tekton.dev/tags: security
    tekton.dev/displayName: "secrets-scan"
spec:
  description: "run gitleaks scan. see https://github.com/zricethezav/gitleaks"
  workspaces:
    - name: source
  params:
    - name: JX_BOOT
    - name: PULL_NUMBER
      description: PULL Request ID
    - name: SS_CONFIG_FILE
      description: "path to gitleaks config file"
      default: "gitleaks.toml"
    - name: PULL_BASE_SHA
      description: PULL_BASE_SHA
    - name: PULL_PULL_SHA
      description: last SHA
    - name: GITLEAKS_IMAGE
      default: "zricethezav/gitleaks:v7.1.0"
  results:
    - name: ss_status
      description: scan status
  stepTemplate:
    name: ""
    env:
      - name: SS_REPORT_PATH
        value: ".report.json"
  steps:
    - name: ss-scan
      image: $(params.GITLEAKS_IMAGE)
      workingDir: $(workspaces.source.path)
      script: |
        git fetch
        git log --left-right --cherry-pick --pretty=format:"%H" $(params.PULL_BASE_SHA)...$(params.PULL_PULL_SHA) > commit_list.txt

        if gitleaks --path="$(workspaces.source.path)" --redact --commits-file=commit_list.txt --config-path="$(params.SS_CONFIG_FILE)" --report="$SS_REPORT_PATH" ; then
            echo "no leaks found"
            echo "success" > $(results.ss_status.path)
          else
            echo "failed" > $(results.ss_status.path)
        fi
    - name: ss-print-report
      image: $(params.GITLEAKS_IMAGE)
      workingDir: $(workspaces.source.path)
      script: |
        if [[ "$(cat $(results.ss_status.path))" == "failed" ]]; then
          cat $SS_REPORT_PATH
        fi
    - name: ss-comment
      image: $(params.JX_BOOT)
      workingDir: $(workspaces.source.path)
      script: |
        export REPO_URL="$(git config --get remote.origin.url)"

        if [[ "$(cat $(results.ss_status.path))" == "failed" ]]; then
          if [[ -n "$(params.PULL_NUMBER)" ]]; then
            REPORT="$(cat $SS_REPORT_PATH)"
            echo -e ":spider: Some leaks have been found \n <details> \n\n \`\`\` \n $REPORT \n \`\`\` \n\n</details>" > .report
            jx gitops pr comment --comment="$(cat .report)" --pr="$(params.PULL_NUMBER)"
          fi
          exit 1
        fi
